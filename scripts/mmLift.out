
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # mmLift.R
> # R to model effect of upzoning on relative price of land and improvements
> # Tom Davidoff
> 
> library(data.table)
> library(ggplot2)
> library(fixest)
> library(geosphere)
> 
> ds <- fread("data/derived/sales.csv")
> dd <- fread("data/derived/descriptions.csv")
> da <- fread("data/derived/assessments.csv")
> dc <- fread("data/derived/folioCentroids.csv")
> di <- fread("data/derived/inventory2024.csv")
> dz <- fread("data/derived/inferZoning.csv")
> 
> df <- merge(ds,dd,by="FOLIO_ID")
> df <- merge(df,da,by="FOLIO_ID")
> df <- merge(df,dc,by="FOLIO_ID")
> print(names(df))
 [1] "FOLIO_ID"                    "CONVEYANCE_DATE"            
 [3] "CONVEYANCE_TYPE_DESCRIPTION" "CONVEYANCE_PRICE"           
 [5] "ACTUAL_USE_DESCRIPTION"      "JURISDICTION_CODE"          
 [7] "JURISDICTION"                "ROLL_NUMBER"                
 [9] "LAND_WIDTH"                  "LAND_SIZE"                  
[11] "LAND_DEPTH"                  "NEIGHBOURHOOD"              
[13] "REGIONAL_DISTRICT"           "TENURE_DESCRIPTION"         
[15] "singleFamily"                "GEN_NET_IMPROVEMENT_VALUE"  
[17] "GEN_NET_LAND_VALUE"          "lon"                        
[19] "lat"                         "street_number"              
[21] "street_name"                
> df <- merge(df,di,by.x=c("JURISDICTION_CODE","ROLL_NUMBER"),by.y=c("Jurisdiction","Roll_Number"),all.x=FALSE)
> df <- merge(df,dz,by.x=c("JURISDICTION_CODE","Zoning"),by.y=c("jurisdiction","zoning"))
> 
> # find distance to transit
> dt <- fread("data/derived/todList.csv")
> print(summary(dt))
 Station Name         Longitude         Latitude     Transit Type      
 Length:109         Min.   :-124.1   Min.   :48.42   Length:109        
 Class :character   1st Qu.:-123.1   1st Qu.:49.19   Class :character  
 Mode  :character   Median :-123.0   Median :49.24   Mode  :character  
                    Mean   :-122.7   Mean   :49.32                     
                    3rd Qu.:-122.8   3rd Qu.:49.27                     
                    Max.   :-119.3   Max.   :53.89                     
> df[,maxFSR:=0]
> df[,nearest:="none"]
> df[,mindist:=1000000]
> print(table(dt[,get("Transit Type")]))

              bus exchange     passenger rail station 
                        36                         68 
West Coast Express station 
                         5 
> for (i in 1:nrow(dt)) {
+ 	df[,disti:=distGeo(cbind(lon,lat),c(dt[i,Longitude],dt[i,Latitude]))]
+ 	if (dt[i,`Transit Type`]=="passenger rail station") {
+ 		df[,maxi:=ifelse(disti<200,5,ifelse(disti<400,4,ifelse(disti<800,3,0)))]
+ 	}
+ 	if (dt[i,`Transit Type`]=="bus exchange") {
+ 		df[,maxi:=ifelse(disti<200,4,ifelse(disti<400,3,0))]
+ 	}
+ 	df[,nearest:=ifelse(maxi>maxFSR,dt[i,`Station Name`],nearest)]
+ 	df[,mindist:=ifelse(maxi>maxFSR ,disti,mindist)]
+ 	df[,maxFSR:=pmax(maxFSR,maxi,na.rm=TRUE)]
+ }	
> print(summary(df[,maxFSR]))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0000  0.0000  0.7562  0.0000  5.0000 
> 
> print(df[maxFSR>0 & JURISDICTION_CODE!=200,.(FOLIO_ID,nearest)]) # note: these make sense
         FOLIO_ID            nearest
           <char>             <char>
    1: A0000NWA0L Lansdowne Exchange
    2: A0000NWA10 Lansdowne Exchange
    3: A0000NWA16 Lansdowne Exchange
    4: A0000NWA1G Lansdowne Exchange
    5: D00001YBA4 Lansdowne Exchange
   ---                              
17568: A0000HQW06       VGH Exchange
17569: A0000HQW0D       VGH Exchange
17570: A0000HQXE0       VGH Exchange
17571: A0000HQXET       VGH Exchange
17572: A0000HQX9A       VGH Exchange
> 
> 
> df[,structureShare:=(GEN_NET_IMPROVEMENT_VALUE/(GEN_NET_IMPROVEMENT_VALUE+GEN_NET_LAND_VALUE))]
> df[,teardown:=structureShare<0.05] # per merge natural value
> df[,assessedValue:=(GEN_NET_IMPROVEMENT_VALUE+GEN_NET_LAND_VALUE)]
> tearDown <- data.table(yearmon=date(),coef=numeric())
> 
> # conjecture about data structure: regular lots have land and depth
> df[,hasDepth:=(!is.na(LAND_DEPTH) & !is.na(LAND_WIDTH))]
> print(summary(feols(structureShare ~ hasDepth | paste0(JURISDICTION,NEIGHBOURHOOD),data=df)))
NOTE: 191 observations removed because of NA values (LHS: 191).
OLS estimation, Dep. Var.: structureShare
Observations: 118,399
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 1,287
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
              Estimate Std. Error  t value  Pr(>|t|)    
hasDepthTRUE -0.024819   0.008695 -2.85442 0.0043807 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.112283     Adj. R2: 0.693632
                 Within R2: 0.001779
> print(summary(feols(teardown ~ hasDepth | paste0(JURISDICTION,NEIGHBOURHOOD),data=df)))
NOTE: 191 observations removed because of NA values (LHS: 191).
OLS estimation, Dep. Var.: teardown
Observations: 118,399
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 1,287
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
             Estimate Std. Error t value  Pr(>|t|)    
hasDepthTRUE 0.103754   0.020332 5.10297 3.846e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.187826     Adj. R2: 0.254622
                 Within R2: 0.011007
> 
> df[,window3:=CONVEYANCE_DATE >= as.Date("2023-08-01") & CONVEYANCE_DATE <= as.Date("2024-02-01") & yearmon(CONVEYANCE_DATE)!= yearmon("2023-11-01")]
> 
> for (m in sort(unique(df[,yearmon(CONVEYANCE_DATE)]))) {
+ 	print(m)
+ 	reg <- feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+teardown| JURISDICTION ^ NEIGHBOURHOOD,data=df[yearmon(CONVEYANCE_DATE)==m & hasDepth==1])
+ 	tearDown <- rbind(tearDown,data.table(yearmon=m,coef=coef(reg)["teardownTRUE"]))
+ }
[1] 2023
[1] 2023.083
NOTE: 1 observation removed because of NA values (LHS: 1).
[1] 2023.167
[1] 2023.25
NOTE: 1 observation removed because of NA values (RHS: 1).
[1] 2023.333
NOTE: 1 observation removed because of NA values (RHS: 1).
[1] 2023.417
[1] 2023.5
[1] 2023.583
NOTE: 1 observation removed because of NA values (RHS: 1).
[1] 2023.667
[1] 2023.75
NOTE: 1 observation removed because of NA values (RHS: 1).
[1] 2023.833
NOTE: 1 observation removed because of NA values (RHS: 1).
[1] 2023.917
[1] 2024
[1] 2024.083
[1] 2024.167
[1] 2024.25
[1] 2024.333
NOTE: 1 observation removed because of NA values (RHS: 1).
[1] 2024.417
[1] 2024.5
[1] 2024.583
[1] 2024.667
[1] 2024.75
[1] 2024.833
[1] 2024.917
> print(tearDown)
             yearmon        coef
              <char>       <num>
 1:             2023 -0.04979972
 2: 2023.08333333333 -0.07908253
 3: 2023.16666666667 -0.04159466
 4:          2023.25 -0.03567836
 5: 2023.33333333333 -0.03949483
 6: 2023.41666666667 -0.04794006
 7:           2023.5 -0.03569712
 8: 2023.58333333333 -0.03231452
 9: 2023.66666666667 -0.02888272
10:          2023.75 -0.04829635
11: 2023.83333333333 -0.07729774
12: 2023.91666666667 -0.06628661
13:             2024 -0.07035943
14: 2024.08333333333 -0.06203851
15: 2024.16666666667 -0.04748731
16:          2024.25  0.02722880
17: 2024.33333333333 -0.05629774
18: 2024.41666666667 -0.04075146
19:           2024.5 -0.06075401
20: 2024.58333333333 -0.07467329
21: 2024.66666666667 -0.12422187
22:          2024.75 -0.07473680
23: 2024.83333333333 -0.06484764
24: 2024.91666666667 -0.05943037
             yearmon        coef
> df[is.na(LAND_SIZE),LAND_SIZE:=LAND_WIDTH*LAND_DEPTH]
> df[,smallLot:=LAND_WIDTH<30 | LAND_DEPTH<100]
> 
> df[,post:=1*(CONVEYANCE_DATE >= as.Date("2023-11-23"))]
> df[,donut:=(CONVEYANCE_DATE > as.Date("2023-11-01") & CONVEYANCE_DATE < as.Date("2024-01-01"))]
> print(table(df[,.(singleFamily,maxFSR)]))
            maxFSR
singleFamily     0     3     4     5
       FALSE 32934 11317  8441  3377
       TRUE  60920  1341   240    20
> 
> df[,hasmax:=max(maxFSR)>0,by=.(JURISDICTION,NEIGHBOURHOOD,yearmon(CONVEYANCE_DATE))]
> df[,transit:=1*(maxFSR>0)]
> print(summary(df[hasmax>0,.N,by=.(JURISDICTION,NEIGHBOURHOOD,yearmon(CONVEYANCE_DATE))]))
 JURISDICTION       NEIGHBOURHOOD         yearmon           N         
 Length:1746        Length:1746        Min.   :2023   Min.   :  1.00  
 Class :character   Class :character   1st Qu.:2023   1st Qu.:  7.00  
 Mode  :character   Mode  :character   Median :2024   Median : 14.00  
                                       Mean   :2024   Mean   : 24.75  
                                       3rd Qu.:2024   3rd Qu.: 29.00  
                                       Max.   :2025   Max.   :576.00  
> 
> df[,singleFamily:=1*singleFamily]
> # first just plain month coefficient
> 
> getTimeCoefs <- function(dset) {
+ 	# run a regression with month coefficients
+ 	r <- feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+i(yearmon(CONVEYANCE_DATE))|paste0(JURISDICTION,NEIGHBOURHOOD),data=dset)
+ 	# extract only the month coefficients, not log assessed value, and then do a line plot
+ 	coefs <- r$coefficients[grep("yearmon",names(r$coefficients))]
+ 	coefs <- coefs[order(names(coefs))]
+ 	coefs <- data.table(coef=coefs,month=names(coefs))
+ 	coefs[,month:=substring(gsub("yearmon\\(CONVEYANCE_DATE\\)::","",month),1,7)]
+ 	coefs[,month:=as.numeric(month)]
+ 	return(coefs)
+ }
> r1 <- getTimeCoefs(df[singleFamily==1])
NOTE: 54 observations removed because of NA values (LHS: 11, RHS: 43).
> r2 <- getTimeCoefs(df[singleFamily==0])
NOTE: 150 observations removed because of NA values (LHS: 2, RHS: 148).
> r1[,type:="singleFamily"]
> r2[,type:="condo"]
> coefs <- rbind(r1,r2)
> ggplot(data=coefs,aes(x=month,y=coef,color=type)) + geom_line() + 
+ 	geom_point() + 
+ 	labs(title="Month Coefficients for Single Family and Condo Sales",x="Month",y="Coefficient") +
+ 	scale_color_manual(values=c("singleFamily"="blue","condo"="red")) + # vertical line at Nov 23
+ 	geom_vline(xintercept=2023+(11+23/31)/12, linetype="dashed", color="black") 
> ggsave("text/monthCoefficients.png",width=10,height=6)
> 
> r1 <- getTimeCoefs(df[singleFamily==1 & transit==1])
NOTE: 3 observations removed because of NA values (RHS: 3).
> r2 <- getTimeCoefs(df[singleFamily==0 & transit==1])
NOTE: 9 observations removed because of NA values (LHS: 2, RHS: 7).
> r1[,type:="singleFamily"]
> r2[,type:="condo"]
> coefs <- rbind(r1,r2)
> ggplot(data=coefs,aes(x=month,y=coef,color=type)) + geom_line() + 
+ 	geom_point() + 
+ 	labs(title="month coefficients for single family and condo sales transit only",x="month",y="coefficient") +
+ 	scale_color_manual(values=c("singleFamily"="blue","condo"="red")) + # vertical line at nov 23
+ 	geom_vline(xintercept=2023+(11+23/31)/12, linetype="dashed", color="black") 
> ggsave("text/monthCoefficientsTransit.png",width=10,height=6)
> 
> r1 <- getTimeCoefs(df[singleFamily==1 & teardown==1])
> r2 <- getTimeCoefs(df[singleFamily==1 & structureShare>.3])
NOTE: 4 observations removed because of NA values (LHS: 4).
> r1[,type:="teardown"]
> r2[,type:="snazzy"]
> coefs <- rbind(r1,r2)
> ggplot(data=coefs,aes(x=month,y=coef,color=type)) + geom_line() + 
+ 	geom_point() + 
+ 	labs(title="month coefficients for single family and condo sales transit only",x="month",y="coefficient") +
+ 	scale_color_manual(values=c("teardown"="blue","not"="red")) + # vertical line at nov 23
+ 	geom_vline(xintercept=2023+(11+23/31)/12, linetype="dashed", color="black") 
> ggsave("text/monthCoefficientsTeardown.png",width=10,height=6)
> 
> r1 <- getTimeCoefs(df[singleFamily==1 & teardown==1 & transit==1])
> r2 <- getTimeCoefs(df[singleFamily==1 & structureShare>.3 & transit==1])
> r1[,type:="teardown"]
> r2[,type:="snazzy"]
> coefs <- rbind(r1,r2)
> ggplot(data=coefs,aes(x=month,y=coef,color=type)) + geom_line() + 
+ 	geom_point() + 
+ 	labs(title="month coefficients for single family and condo sales transit only",x="month",y="coefficient") +
+ 	scale_color_manual(values=c("teardown"="blue","not"="red")) + # vertical line at nov 23
+ 	geom_vline(xintercept=2023+(11+23/31)/12, linetype="dashed", color="black") 
> ggsave("text/monthCoefficientsTeardownTransit.png",width=10,height=6)
> 
> df[,rZone:=singleShare>.9]
> 
> r1 <- getTimeCoefs(df[singleFamily==1 & teardown==1 & rZone==1])
> r2 <- getTimeCoefs(df[singleFamily==1 & structureShare>.3 & rZone==1])
NOTE: 2 observations removed because of NA values (LHS: 2).
> r1[,type:="teardown"]
> r2[,type:="snazzy"]
> coefs <- rbind(r1,r2)
> ggplot(data=coefs,aes(x=month,y=coef,color=type)) + geom_line() + 
+ 	geom_point() + 
+ 	labs(title="month coefficients for single family and condo sales transit only",x="month",y="coefficient") +
+ 	scale_color_manual(values=c("teardown"="blue","snazzy"="red")) + # vertical line at nov 23
+ 	geom_vline(xintercept=2023+(11+23/31)/12, linetype="dashed", color="black") 
> ggsave("text/monthCoefficientsTeardownR.png",width=10,height=6)
> 
> # transit vs not
> r1 <- getTimeCoefs(df[singleFamily==1 & transit==1 & REGIONAL_DISTRICT =="Metro Vancouver" ])
NOTE: 3 observations removed because of NA values (RHS: 3).
> r2 <- getTimeCoefs(df[singleFamily==1 & transit==0 & REGIONAL_DISTRICT =="Metro Vancouver" ])
NOTE: 20 observations removed because of NA values (LHS: 2, RHS: 18).
> r1[,type:="transit"]
> r2[,type:="no transit"]
> coefs <- rbind(r1,r2)
> ggplot(data=coefs,aes(x=month,y=coef,color=type)) + geom_line() + 
+ 	geom_point() + 
+ 	labs(title="month coefficients for single family sales transit vs not",x="month",y="coefficient") +
+ 	scale_color_manual(values=c("transit"="blue","no transit"="red")) + # vertical line at nov 23
+ 	geom_vline(xintercept=2023+(11+23/31)/12, linetype="dashed", color="black")
> ggsave("text/monthCoefficientsTransitNot.png",width=10,height=6)
> 
> # feols reg log price on transit times single indicator times post
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+transit*post|paste0(JURISDICTION,NEIGHBOURHOOD),data=df[donut==0])))
NOTE: 197 observations removed because of NA values (LHS: 13, RHS: 184).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 111,061
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 1,282
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
                    Estimate Std. Error   t value  Pr(>|t|)    
log(assessedValue)  0.903175   0.016612 54.368685 < 2.2e-16 ***
transit            -0.000411   0.008394 -0.049020   0.96091    
post                0.035466   0.003111 11.399528 < 2.2e-16 ***
transit:post        0.000410   0.009786  0.041898   0.96659    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.166719     Adj. R2: 0.930284
                 Within R2: 0.780796
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+transit*post|paste0(JURISDICTION,NEIGHBOURHOOD),data=df[donut==0 & singleFamily==1])))
NOTE: 49 observations removed because of NA values (LHS: 11, RHS: 38).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 58,730
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 1,144
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
                    Estimate Std. Error   t value  Pr(>|t|)    
log(assessedValue)  0.809208   0.040776 19.845239 < 2.2e-16 ***
transit            -0.003903   0.008653 -0.451046   0.65204    
post                0.033108   0.002431 13.620386 < 2.2e-16 ***
transit:post        0.014577   0.015763  0.924761   0.35529    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.19022     Adj. R2: 0.91482 
                Within R2: 0.554377
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+transit*post|paste0(JURISDICTION,NEIGHBOURHOOD),data=df[donut==0 & singleFamily==1 & REGIONAL_DISTRICT =="Metro Vancouver"])))
NOTE: 21 observations removed because of NA values (LHS: 2, RHS: 19).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 20,674
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 222
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
                   Estimate Std. Error   t value  Pr(>|t|)    
log(assessedValue) 0.920807   0.031332 29.388928 < 2.2e-16 ***
transit            0.001479   0.008033  0.184093   0.85411    
post               0.041960   0.004260  9.849519 < 2.2e-16 ***
transit:post       0.015998   0.016131  0.991767   0.32240    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.165964     Adj. R2: 0.840646
                 Within R2: 0.628225
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+transit*post|paste0(JURISDICTION,NEIGHBOURHOOD),data=df[donut==0 & singleFamily==1 & REGIONAL_DISTRICT =="Metro Vancouver" & JURISDICTION_CODE==200])))
NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 2).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 3,538
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 25
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
                    Estimate Std. Error   t value   Pr(>|t|)    
log(assessedValue)  0.980765   0.027639 35.485160  < 2.2e-16 ***
transit            -0.004690   0.009238 -0.507683 6.1631e-01    
post                0.050295   0.005446  9.235124 2.2712e-09 ***
transit:post        0.033409   0.032760  1.019797 3.1800e-01    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.117613     Adj. R2: 0.922564
                 Within R2: 0.829561
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+maxFSR*post|paste0(JURISDICTION,NEIGHBOURHOOD),data=df[donut==0 & singleFamily==1 & REGIONAL_DISTRICT =="Metro Vancouver" & JURISDICTION_CODE==200])))
NOTE: 3 observations removed because of NA values (LHS: 1, RHS: 2).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 3,538
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 25
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
                      Estimate Std. Error   t value   Pr(>|t|)    
log(assessedValue)  0.98094771   0.027612 35.526486  < 2.2e-16 ***
maxFSR             -0.00000479   0.003486 -0.001375 9.9891e-01    
post                0.04907510   0.005526  8.879975 4.7418e-09 ***
maxFSR:post         0.01250126   0.011549  1.082487 2.8979e-01    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.117417     Adj. R2: 0.922821
                 Within R2: 0.830127
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+transit*post*singleFamily|paste0(JURISDICTION,NEIGHBOURHOOD),data=df[donut==0])))
NOTE: 197 observations removed because of NA values (LHS: 13, RHS: 184).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 111,061
Fixed-effects: paste0(JURISDICTION, NEIGHBOURHOOD): 1,282
Standard-errors: Clustered (paste0(JURISDICTION, NEIGHBOURHOOD)) 
                           Estimate Std. Error   t value   Pr(>|t|)    
log(assessedValue)         0.859904   0.022777 37.753496  < 2.2e-16 ***
transit                   -0.003798   0.009417 -0.403334 6.8677e-01    
post                       0.032087   0.007555  4.247389 2.3191e-05 ***
singleFamily               0.111901   0.019309  5.795159 8.5833e-09 ***
transit:post               0.001783   0.012111  0.147223 8.8298e-01    
transit:singleFamily       0.017494   0.012881  1.358205 1.7464e-01    
post:singleFamily          0.002258   0.007755  0.291119 7.7101e-01    
transit:post:singleFamily  0.015865   0.020013  0.792751 4.2807e-01    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.16523     Adj. R2: 0.931522
                Within R2: 0.784695
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+post*singleFamily|nearest,data=df[transit==1 & donut==0])))
NOTE: 12 observations removed because of NA values (LHS: 2, RHS: 10).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 23,075
Fixed-effects: nearest: 91
Standard-errors: Clustered (nearest) 
                   Estimate Std. Error  t value  Pr(>|t|)    
log(assessedValue) 0.969324   0.015183 63.84117 < 2.2e-16 ***
post               0.033607   0.011075  3.03444  0.003150 ** 
singleFamily       0.040295   0.020919  1.92619  0.057236 .  
post:singleFamily  0.024078   0.017864  1.34781  0.181104    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.108682     Adj. R2: 0.942714
                 Within R2: 0.90729 
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+post*structureShare|nearest,data=df[transit==1 & singleFamily==1 & donut==0])))
NOTE: 3 observations removed because of NA values (RHS: 3).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 1,498
Fixed-effects: nearest: 75
Standard-errors: Clustered (nearest) 
                     Estimate Std. Error   t value   Pr(>|t|)    
log(assessedValue)   0.951204   0.068892 13.807254  < 2.2e-16 ***
post                 0.064209   0.017134  3.747389 0.00035168 ***
structureShare       0.156401   0.101882  1.535118 0.12901966    
post:structureShare -0.015255   0.076310 -0.199905 0.84210351    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.146794     Adj. R2: 0.885699
                 Within R2: 0.652935
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+post*teardown|nearest,data=df[transit==1 & singleFamily==1 & donut==0])))
NOTE: 3 observations removed because of NA values (RHS: 3).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 1,498
Fixed-effects: nearest: 75
Standard-errors: Clustered (nearest) 
                    Estimate Std. Error   t value  Pr(>|t|)    
log(assessedValue)  0.979716   0.043105 22.728540 < 2.2e-16 ***
post                0.062157   0.015894  3.910663 0.0002023 ***
teardownTRUE       -0.030398   0.014782 -2.056389 0.0432716 *  
post:teardownTRUE   0.001592   0.015630  0.101851 0.9191505    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.146951     Adj. R2: 0.885454
                 Within R2: 0.65219 
> print(summary(feols(log(CONVEYANCE_PRICE) ~ log(assessedValue)+post*singleShare|nearest,data=df[transit==0 & singleFamily==1 & donut==0])))
NOTE: 46 observations removed because of NA values (LHS: 11, RHS: 35).
OLS estimation, Dep. Var.: log(CONVEYANCE_PRICE)
Observations: 57,232
Fixed-effects: nearest: 1
Standard-errors: IID 
                    Estimate Std. Error    t value  Pr(>|t|)    
log(assessedValue)  0.950466   0.001338 710.127402 < 2.2e-16 ***
post                0.030327   0.008847   3.427810 0.0006089 ***
singleShare        -0.059966   0.007149  -8.388060 < 2.2e-16 ***
post:singleShare    0.007673   0.009668   0.793683 0.4273835    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
RMSE: 0.207525     Adj. R2: 0.900103
                 Within R2: 0.90011 
> q("no")
> proc.time()
   user  system elapsed 
 18.366   0.880  20.765 
